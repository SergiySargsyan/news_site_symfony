<?php

namespace AppBundle\Repository;

use Symfony\Bundle\FrameworkBundle\Controller\ControllerTrait;
/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends \Doctrine\ORM\EntityRepository
{
    public function getFiveNews($categoryId)
    {
        return $this->createQueryBuilder('news')
            ->where("news.category = {$categoryId}")
            ->addOrderBy('news.date', 'DESC')
            ->setMaxResults(5)->getQuery()->getResult();
    }

    public function getAnalystNews( $offset = 0, $limit = 5)
    {
        return $this->createQueryBuilder('news')
            ->where("news.analyst = true")
            ->orderBy('news.date', 'DESC')
            ->setFirstResult($offset)
            ->setMaxResults($limit)
            ->getQuery()
            ->getResult();
    }

    public function getNewsByCategoryName($categoryName, $offset = 0, $limit = 5)
    {
        return $this->createQueryBuilder('news')
            ->join('news.category', 'c' )
            ->where('c.name = :name')
            ->addOrderBy('news.date', 'DESC')
            ->setParameter('name', $categoryName)
            ->setFirstResult($offset)
            ->setMaxResults($limit)
            ->getQuery()->getResult();
    }


    public function getBaseNews($arr)
    {
        $rez = [];
        foreach ($arr as $key => $value){
            $rez[$key] = $this->getFiveNews($value);
        }

        $rez['Analyst'] = $this->getAnalystNews();

        return $rez;
    }

    public function getNewsByTag($tagName, $offset = 0, $limit = 5)
    {
        return $this->createQueryBuilder('news')
            ->join('news.tag', 't' )
            ->where('t.name = :name')
            ->addOrderBy('news.date', 'DESC')
            ->setParameter('name', $tagName)
            ->setFirstResult($offset)
            ->setMaxResults($limit)
            ->getQuery()->getResult();
    }

    public function getSearchNews($date, $offset = 0, $limit = 5)
    {
        dump($date);
        $category = $date['category'];
        $tag = $date['tag'];
        $startDate = $date['startDate'];
        $endDate = $date['endDate'];
//        extract($date);

        $query = $this->createQueryBuilder('news')
            ->addSelect('COUNT(tag.id) as nMethods')
            ->join('news.tag','tag')
            ->andWhere('tag.id IN (:tag)')
            ->andWhere('news.category IN (:category)')
            ->andWhere('news.date >= (:startDate)')
            ->andWhere('news.date <= (:endDate)')
            ->groupBy('news.id')
            ->orderBy("nMethods", 'DESC')
            ->orderBy('news.date','DESC')
            ->setParameters(['tag' => $tag,
                'category' => $category,
                'startDate' => $startDate,
                'endDate' => $endDate])
            ->setFirstResult($offset)
            ->setMaxResults($limit)
            ->getQuery()
            ->getResult();
        ;
        $news = [];
        foreach ($query as $value){
            $news[]=$value[0];
        }
//        dump($news);
        return $news;
    }
}
